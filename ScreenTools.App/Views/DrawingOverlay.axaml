<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="ScreenTools.App.DrawingOverlay"
        xmlns:local="clr-namespace:ScreenTools.App"
        xmlns:core="clr-namespace:ScreenTools.Core;assembly=ScreenTools.Core"
        WindowState="Maximized"
        TransparencyLevelHint="Transparent" 
        Background="Transparent"
        ExtendClientAreaChromeHints="NoChrome"
        SystemDecorations="None"
        ExtendClientAreaTitleBarHeightHint="0"
        CanResize="False"
        IsHitTestVisible="True"
        IsVisible="{Binding IsVisible}">
	<Window.Resources>
		<local:BooleanToSolidColorBrushConverter x:Key="BooleanToSolidColorBrushConverter"/>
        
	</Window.Resources>
    <Window.Styles>
        <Style Selector="ContextMenu.ContextMenuShapes">
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="0" />
        </Style>
        <Style Selector="ContextMenu.ContextMenuShapes MenuItem">
            <Setter Property="Padding" Value="0 4 0 4" />
        </Style>
        <Style Selector="ContextMenu.ContextMenuShapes MenuItem Svg">
            <Setter Property="Margin" Value="0 0 15 0" />
            <Setter Property="Height" Value="16" />
        </Style>
        <Style Selector="ContextMenu.ContextMenuShapes MenuItem TextBlock">
            <Setter Property="TextAlignment" Value="End" />
            <Setter Property="FontSize" Value="14"></Setter>
        </Style>
        <Style Selector="Border#PopupBorder">
            <Setter Property="Background" Value="#E6E6E6" />
            <Setter Property="BorderBrush" Value="#BDBDBD" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="CornerRadius" Value="5" />
        </Style>
        <Style Selector="ComboBox">
            <Setter Property="Width" Value="70" />
            <Setter Property="Background" Value="#DEDEDE" />
            <Setter Property="BorderThickness" Value="0" />
        </Style>
        <Style Selector="Button">
            <Setter Property="Background" Value="#DEDEDE" />
            <Setter Property="BorderThickness" Value="0" />
        </Style>
        <Style Selector="Button StackPanel Svg">
            <Setter Property="Width" Value="22" />
            <Setter Property="Height" Value="22" />
            <Setter Property="Margin" Value="0 0 1 0" />
        </Style>
        <Style Selector="Button StackPanel Grid TextBlock">
            <Setter Property="FontSize" Value="8" />
        </Style>
    </Window.Styles>
    <Border 
        x:Name="WindowBorder"
        BorderBrush="CornflowerBlue" 
        BorderThickness="{Binding WindowBorderThickness}"
        Background="Transparent">
        <Grid RowDefinitions="1,*">
        <Grid
            x:Name="PartGrid"
            Grid.Row="0">
            <Popup x:Name="ToolsPopup"
                   Placement="Bottom"
                   VerticalOffset="10"
                   PlacementTarget="PartGrid"
                   IsOpen="{Binding IsPopupOpen, FallbackValue=true}">
                <Border
                    x:Name="PopupBorder"
                    Padding="5">
                    <StackPanel Orientation="Horizontal" Spacing="5">
                        <ComboBox
                            ItemsSource="{Binding LineStrokes}"
                            SelectedItem="{Binding SelectedLineStroke}"
                            ToolTip.Tip="Stroke width"/>
                        <ComboBox
                            x:Name="ColorComboBox"
                            ItemsSource="{Binding LineColors}"
                            SelectedItem="{Binding SelectedLineColor}"
                            ToolTip.Tip="Stroke color">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                   <Panel
                                       Margin="0">
                                       <Border
                                           Padding="0"
                                           Margin="0"
                                           BorderBrush="{Binding}"
                                           Height="20"
                                           Background="{Binding}" />
                                   </Panel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <ItemsControl ItemsSource="{Binding ToolbarItems}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" Spacing="5"></StackPanel>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.DataTemplates>
                                <DataTemplate DataType="local:DrawingToolbarItemViewModel">
                                    <Button
                                        Background="{Binding IsActive,
                                            Converter={StaticResource BooleanToSolidColorBrushConverter}}"
                                        Command="{Binding OnClickCommand}"
                                        ToolTip.Tip="{Binding ToolTip}">
                                        <StackPanel Orientation="Horizontal">
                                            <Svg Path="{Binding IconPath}"/>
                                            <Grid RowDefinitions="*, Auto">
                                                <TextBlock Grid.Row="1" Text="{Binding ShortcutText}" />
                                            </Grid>
                                        </StackPanel>
                                        <Button.ContextMenu>
                                            <ContextMenu
                                                Placement="BottomEdgeAlignedLeft"
                                                Classes="ContextMenuShapes"
                                                ItemsSource="{Binding SubItems}"
                                                IsVisible="{Binding IsContextMenuVisible}">
                                                <ContextMenu.Styles>
                                                    <Style Selector="MenuItem">
                                                        <Setter Property="Header">
                                                            <Template>
                                                                <StackPanel Orientation="Horizontal">
                                                                    <Svg Path="{Binding IconPath}" />
                                                                    <TextBlock Text="{Binding Text}"/>
                                                                </StackPanel>
                                                            </Template>
                                                        </Setter>
                                                        <Setter Property="Command" Value="{Binding OnClickCommand}"  />
                                                    </Style>
                                                </ContextMenu.Styles>
                                            </ContextMenu>
                                        </Button.ContextMenu>
                                    </Button>
                                </DataTemplate>
                            </ItemsControl.DataTemplates>
                        </ItemsControl>
                    </StackPanel>
                </Border>
            </Popup>
        </Grid>
        <ItemsControl 
            Grid.Row="1" 
            ItemsSource="{Binding Shapes}" >
            <ItemsControl.Styles>
                <Style Selector="ContentPresenter" x:DataType="core:ShapeViewModelBase">
                    <Setter Property="Canvas.Left" Value="{Binding X}"/>
                    <Setter Property="Canvas.Top" Value="{Binding Y}"/>
                </Style>
            </ItemsControl.Styles>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas x:Name="Canvas"
                            Initialized="Canvas_OnInitialized"
                            Background="Transparent" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <local:ShapeTemplateSelector>
                    <DataTemplate x:Key="RectangleViewModel" DataType="{x:Type core:RectangleViewModel}">
                        <Rectangle
                            Fill="{Binding Fill}"
                            Height="{Binding Height}"
                            Width="{Binding Width}"
                            Stroke="{Binding Stroke}"
                            StrokeThickness="{Binding StrokeThickness}">
                            <Interaction.Behaviors>
                                <EventTriggerBehavior EventName="PointerPressed">
                                    <InvokeCommandAction Command="{Binding PointerPressedCommand}" />
                                </EventTriggerBehavior>
                            </Interaction.Behaviors>
                        </Rectangle>
                    </DataTemplate>
                    <DataTemplate x:Key="LineViewModel" DataType="{x:Type core:LineViewModel}">
                        <Line 
                            Stroke="{Binding Stroke}"
                            StrokeThickness="{Binding StrokeThickness}"
                            StartPoint="{Binding StartPoint}"
                            EndPoint="{Binding EndPoint}"/>
                    </DataTemplate>
                    <DataTemplate x:Key="PolylineViewModel" DataType="{x:Type core:PolylineViewModel}">
                        <Polyline 
                            Points="{Binding Points}"
                            Stroke="{Binding Stroke}"
                            StrokeThickness="{Binding StrokeThickness}"
                            StrokeJoin="{Binding StrokeJoin}"
                            StrokeLineCap="{Binding StrokeLineCap}"/>
                    </DataTemplate>
                    <DataTemplate x:Key="TextBlockViewModel" DataType="{x:Type core:TextBlockViewModel}">
                        <TextBlock 
                            Text="{Binding Text}"
                            FontSize="{Binding FontSize}"
                            Foreground="{Binding Foreground}"
                            Background="{Binding Background}">
                        </TextBlock>
                    </DataTemplate>
                </local:ShapeTemplateSelector>
                
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </Grid>
    </Border>
</Window>


 

