<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="ScreenTools.App.DrawingOverlay"
        xmlns:local="clr-namespace:ScreenTools.App"
        WindowState="Maximized"
        TransparencyLevelHint="Transparent" 
        Background="Transparent"
        ExtendClientAreaChromeHints="NoChrome"
        SystemDecorations="None"
        ExtendClientAreaTitleBarHeightHint="0"
        CanResize="False"
        IsHitTestVisible="True"
		DataContext="{Binding $self}">
	<Window.Resources>
		<local:DrawingStateToBooleanConverter x:Key="DrawingStateToBooleanConverter"/>
	</Window.Resources>
    <Window.Styles>
        <Style Selector="ContextMenu.ContextMenuShapes">
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="0" />
        </Style>
        <Style Selector="ContextMenu.ContextMenuShapes > MenuItem">
            <Setter Property="Padding" Value="0 4 0 4" />
        </Style>
        <Style Selector="ContextMenu.ContextMenuShapes > MenuItem Svg">
            <Setter Property="Margin" Value="0 0 15 0" />
            <Setter Property="Height" Value="16" />
        </Style>
        <Style Selector="ContextMenu.ContextMenuShapes > MenuItem TextBlock">
            <Setter Property="TextAlignment" Value="End" />
            <Setter Property="FontSize" Value="14"></Setter>
        </Style>
        <Style Selector="Border#PopupBorder">
            <Setter Property="Background" Value="#E6E6E6" />
            <Setter Property="BorderBrush" Value="#BDBDBD" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="CornerRadius" Value="5" />
        </Style>
        <Style Selector="ComboBox">
            <Setter Property="Width" Value="70" />
            <Setter Property="Background" Value="#DEDEDE" />
            <Setter Property="BorderThickness" Value="0" />
        </Style>
        <Style Selector="Button">
            <Setter Property="Background" Value="#DEDEDE" />
            <Setter Property="BorderThickness" Value="0" />
        </Style>
        <Style Selector="Button StackPanel Svg">
            <Setter Property="Width" Value="22" />
            <Setter Property="Height" Value="22" />
            <Setter Property="Margin" Value="0 0 1 0" />
        </Style>
        <Style Selector="Button StackPanel Grid TextBlock">
            <Setter Property="FontSize" Value="8" />
        </Style>
    </Window.Styles>
    <Border 
        x:Name="WindowBorder"
        BorderBrush="CornflowerBlue" 
        BorderThickness="{Binding WindowBorderThickness}"
        Background="Transparent">
        <Grid RowDefinitions="1,*">
        <Grid
            x:Name="PartGrid"
            Grid.Row="0">
            <Popup x:Name="ToolsPopup" 
                   Placement="Bottom"
                   VerticalOffset="10"
                   PlacementTarget="PartGrid" 
                   IsOpen="{Binding IsPopupOpen, FallbackValue=true}">
                <Border
                    x:Name="PopupBorder"
                    Padding="5">
                    <StackPanel Orientation="Horizontal" Spacing="5">
                        <ComboBox 
                            ItemsSource="{Binding LineStrokes}"
                            SelectedItem="{Binding SelectedLineStroke}"
                            SelectionChanged="StrokeWidthComboBox_OnSelectionChanged"
                            ToolTip.Tip="Stroke width"/>
                        <ComboBox 
                            x:Name="ColorComboBox"
                            ItemsSource="{Binding LineColors}"
                            SelectedItem="{Binding SelectedLineColor}"
                            SelectionChanged="StrokeColorComboBox_OnSelectionChanged"
                            ToolTip.Tip="Stroke color">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                   <Panel
                                       Margin="0">
                                       <Border 
                                           Padding="0"
                                           Margin="0"
                                           BorderBrush="{Binding}"
                                           Height="20"
                                           Background="{Binding}" />
                                   </Panel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <Button 
                            Click="ButtonPen_OnClick"
                            Background="{Binding DrawingState, 
							            Converter={StaticResource DrawingStateToBooleanConverter},
										    ConverterParameter={x:Static local:DrawingState.Draw}}"
                            ToolTip.Tip="Pen">
                            <StackPanel Orientation="Horizontal">
                                <Svg Path="/Assets/pen.svg"/>
                                <Grid RowDefinitions="*, Auto">
                                    <TextBlock Grid.Row="1" Text="1" />
                                </Grid>
                            </StackPanel>
                        </Button>
                        <Button 
                            ToolTip.Tip="{Binding SelectedShapeToolTip}"
                            Background="{Binding DrawingState, 
							            Converter={StaticResource DrawingStateToBooleanConverter},
										    ConverterParameter={x:Static local:DrawingState.DrawShape}}">
                            <Button.ContextMenu>
                                <ContextMenu Classes="ContextMenuShapes">
                                    <MenuItem x:Name="Line" Click="ContextMenuItemShapes_OnClick">
                                        <MenuItem.Header>
                                            <StackPanel Orientation="Horizontal">
                                                <Svg Path="/Assets/line.svg" />
                                                <TextBlock>
                                                    Line
                                                </TextBlock>
                                            </StackPanel>
                                        </MenuItem.Header>
                                    </MenuItem>
                                    <MenuItem x:Name="Rectangle" Click="ContextMenuItemShapes_OnClick">
                                        <MenuItem.Header>
                                            <StackPanel Orientation="Horizontal">
                                                <Svg Path="/Assets/square.svg" />
                                                <TextBlock>
                                                    Rectangle
                                                </TextBlock>
                                            </StackPanel>
                                        </MenuItem.Header>
                                    </MenuItem>
                                    <MenuItem x:Name="Ellipse" Click="ContextMenuItemShapes_OnClick">
                                        <MenuItem.Header>
                                            <StackPanel Orientation="Horizontal">
                                                <Svg Path="/Assets/circle.svg" />
                                                <TextBlock>
                                                    Ellipse
                                                </TextBlock>
                                            </StackPanel>
                                        </MenuItem.Header>
                                    </MenuItem>
                                </ContextMenu>
                            </Button.ContextMenu>
                            <StackPanel Orientation="Horizontal">
                                <Svg Path="/Assets/square.svg"/>
                                <Grid RowDefinitions="*, Auto">
                                    <TextBlock Grid.Row="1" Text="2" />
                                </Grid>
                            </StackPanel>
                        </Button>
						<Button 
                            Click="ButtonUndo_OnClick"
                            ToolTip.Tip="Undo">
                            <StackPanel Orientation="Horizontal">
                                <Svg Path="/Assets/undo.svg"/>
                                <Grid RowDefinitions="*, Auto">
                                    <TextBlock Grid.Row="1" Text="3" />
                                </Grid>
                            </StackPanel>
						</Button>
                        <Button 
                            Click="ButtonEraser_OnClick" 
                            Background="{Binding DrawingState, 
							            Converter={StaticResource DrawingStateToBooleanConverter},
										    ConverterParameter={x:Static local:DrawingState.Erase}}"
                            ToolTip.Tip="Erase content using area selector tool">
                            <StackPanel Orientation="Horizontal">
                                <Svg Path="/Assets/eraser.svg"/>
                                <Grid RowDefinitions="*, Auto">
                                    <TextBlock Grid.Row="1" Text="4" />
                                </Grid>
                            </StackPanel>
                        </Button>
                        <Button 
                            Click="ButtonClear_OnClick"
                            ToolTip.Tip="Clear all content">
                            <StackPanel Orientation="Horizontal">
                                <Svg Path="/Assets/trash.svg"/>
                                <Grid RowDefinitions="*, Auto">
                                    <TextBlock Grid.Row="1" Text="5" />
                                </Grid>
                            </StackPanel>
                        </Button>
                        <Button 
                            Click="ButtonDetectText_OnClick" 
                            Background="{Binding DrawingState, 
							            Converter={StaticResource DrawingStateToBooleanConverter},
										    ConverterParameter={x:Static local:DrawingState.DetectText}}"
                            ToolTip.Tip="Detect text using area selector tool">
                            <StackPanel Orientation="Horizontal">
                                <Svg Path="/Assets/type.svg"/>
                                <Grid RowDefinitions="*, Auto">
                                    <TextBlock Grid.Row="1" Text="6" />
                                </Grid>
                            </StackPanel>
                        </Button>
                        <Button Click="ButtonSave_OnClick"
                                ToolTip.Tip="Save">
                            <StackPanel Orientation="Horizontal">
                                <Svg Path="/Assets/save.svg"/>
                                <Grid RowDefinitions="*, Auto">
                                    <TextBlock Grid.Row="1" Text="C+S" />
                                </Grid>
                            </StackPanel>
                        </Button>
                        <Button 
                            Click="ButtonClose_OnClick"
                            ToolTip.Tip="Close window">
                            <StackPanel Orientation="Horizontal">
                                <Svg Path="/Assets/x.svg"/>
                                <Grid RowDefinitions="*, Auto">
                                    <TextBlock Grid.Row="1" Text="ESC" />
                                </Grid>
                            </StackPanel>
                        </Button>
                    </StackPanel>
                </Border>
            </Popup>
        </Grid>
        <Canvas
            Grid.Row="1"
            x:Name="Canvas"
            PointerPressed="Canvas_OnPointerPressed"
            PointerReleased="Canvas_OnPointerReleased"
            PointerMoved="Canvas_OnPointerMoved"
            Background="Transparent">
        </Canvas>
    </Grid>
    </Border>
</Window>


 

